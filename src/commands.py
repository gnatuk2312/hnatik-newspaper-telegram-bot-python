from telebot import types

from config import bot
from constants import NEWSPAPER_SUBSCRIPTIONS
from .bot_messages import BotMessages
from api.users import get_user_by_chat_id, create_user
from api.newspaper_subscriptions import delete_all_newspaper_subscriptions_by_user_id
from src.weather import get_weather_subscription_message_for_user
from src.currency import get_currency_subscription_message_for_user
from src.cryptocurrency import get_cryptocurrency_subscription_message_for_user


class Commands:
    @bot.message_handler(commands=["start"])
    async def start(message):
        chat = message.chat
        chat_id = chat.id
        username = str(chat.username or "–î—Ä—É–≥")
        first_name = str(chat.first_name or "–î—Ä—É–≥")
        last_name = str(chat.last_name or "")

        user = await get_user_by_chat_id(chat_id)
        if user == None:
            await create_user(username, first_name, last_name, chat_id)

        await bot.send_message(
            chat_id,
            f"–ü—Ä–∏–≤—ñ—Ç, {first_name} {last_name} üëã –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –ë–æ—Ç –õ–∏—Å—Ç–æ–Ω–æ—à–∞! \n\n–°–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏—Å—å –∫–æ–º–∞–Ω–¥–æ—é /addsubscription —Ç–∏ –º–æ–∂–µ—à –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Ç–µ–º–∏ —É –º–æ—ó–π –≥–∞–∑–µ—Ç—ñ üì∞ \n\n–ü—ñ—Å–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏ —è –ø–æ—á–Ω—É –ø—Ä–∏–Ω–æ—Å–∏—Ç–∏ —Ç–æ–±—ñ –≥–∞–∑–µ—Ç—É –∫–æ–∂–Ω–æ–≥–æ —Ä–∞–Ω–∫—É –æ 9:00 ‚òÄÔ∏è \n\nP.S. –ù–∞—Ç–∏—Å–∫–∞–π /addsubscription —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç–µ–º–∏",
        )

    @bot.message_handler(commands=["addsubscription"])
    async def add_subscription(message):
        chat_id = message.chat.id

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

        for newspaper_subscription in NEWSPAPER_SUBSCRIPTIONS:
            button = types.KeyboardButton(newspaper_subscription["subscription"])
            markup.add(button)

        await bot.send_message(chat_id, "–û–±–∏—Ä–∞–π —Ç–µ–º—É üóû", reply_markup=markup)

    @bot.message_handler(commands=["readnewspaper"])
    async def read_newspaper(message):
        chat_id = message.chat.id

        loading_message = await BotMessages.send_loading_message(chat_id)

        user = await get_user_by_chat_id(chat_id)
        if not user:
            await bot.delete_message(chat_id, loading_message.id)
            await bot.send_message(
                chat_id,
                "–ü–µ—Ä–µ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏ –ø–æ—á–Ω–∏ —Ä–æ–±–æ—Ç—É —ñ–∑ –±–æ—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ—é /start",
            )
            return

        weather_message = await get_weather_subscription_message_for_user(user)
        await bot.send_message(chat_id, weather_message, parse_mode="markdown")

        currency_message = await get_currency_subscription_message_for_user(user)
        await bot.send_message(chat_id, currency_message, parse_mode="markdown")

        cryptocurrency_message = await get_cryptocurrency_subscription_message_for_user(
            user
        )
        await bot.send_message(chat_id, cryptocurrency_message, parse_mode="markdown")

        await bot.delete_message(chat_id, loading_message.id)

    @bot.message_handler(commands=["deleteallsubscriptions"])
    async def delete_all_subscriptions(message):
        chat_id = message.chat.id

        loading_message = await BotMessages.send_loading_message(chat_id)

        user = await get_user_by_chat_id(chat_id)
        if user == None:
            await bot.delete_message(chat_id, loading_message.id)
            await BotMessages.send_exception_message(chat_id)
            return

        await delete_all_newspaper_subscriptions_by_user_id(user["id"])

        await bot.delete_message(chat_id, loading_message.id)
        await bot.send_message(
            chat_id,
            "–£—Å—ñ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≥–∞–∑–µ—Ç—É —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!\n\n–°–∫–æ—Ä–∏—Å—Ç—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ—é /addsubscription —Ç–∞ –æ—Ñ–æ—Ä–º–∏ –ø–µ—Ä—à—É –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ —Ü—ñ–∫–∞–≤—É –¥–ª—è —Ç–µ–±–µ —Ç–µ–º—É üòâ",
        )
